name: Merge to release branch

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Source branch'
        type: string
        required: true
      target_branch:
        description: 'Target branch'
        type: choice
        options:
          - release/dev
          - release/uat
      merge_strategy:
        description: 'Merge strategy'
        type: choice
        options:
          - Auto (based on label)
          - Squash
          - Rebase
      require_approval:
        description: 'Require approval from dev team member'
        type: boolean
        default: true
      squash_sfblazor_components_update_commit:
        description: 'Squash SfBlazor.Components update commit in to previous commit'
        type: boolean
        default: true

jobs:
  merge-to-release-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify source branch exists
        run: |
          if ! ./.github/workflows/scripts/verify-branch-exists.sh --repository="${{ github.repository }}" --branch="${{ inputs.source_branch }}"; then
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get pull request number
        id: get_pull_request_number
        run: |
          if ! ./.github/workflows/scripts/get-pull-request-number.sh --branch="${{ inputs.source_branch }}"; then
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify dev team approval
        if: ${{ inputs.require_approval }}
        run: |
          if ! ./.github/workflows/scripts/verify-pull-request-approval.sh --pull-request-number="${{ steps.get_pull_request_number.outputs.pull_request_number }}" --repository-owner="${{ github.repository_owner }}" --team-name="storefeeder-classic-v3-dev-team"; then
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

      - name: Create and verify target branch
        run: |
          if ! ./.github/workflows/scripts/create-and-verify-branch.sh --repository="${{ github.repository }}" --branch="${{ inputs.target_branch }}"; then
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rebase branch
        run: |
          if ! ./.github/workflows/scripts/rebase-with-submodule-conflict-resolution.sh --source-branch="${{ inputs.source_branch }}" --target-branch="${{ inputs.target_branch }}" --submodule-path="modules/test-components"; then
            exit 1
          fi
      
      - name: Update submodule
        run: |
          if ! ./.github/workflows/scripts/update-submodule.sh --local-branch="${{ inputs.source_branch }}" --submodule-repository="${{ github.repository_owner }}/test-components" --submodule-branch="${{ inputs.target_branch }}" --submodule-path="modules/test-components" --squash-commit="${{ inputs.squash_sfblazor_components_update_commit }}"; then
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes
        run: |
          if ! ./.github/workflows/scripts/push-changes.sh --branch="${{ inputs.target_branch }}" --force-push=false; then
            exit 1
          fi
          if ! ./.github/workflows/scripts/push-changes.sh --branch="${{ inputs.source_branch }}" --dry-run=true --force-push=true; then
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
