name: Update SfBlazor.Components

on:
  workflow_dispatch:
    inputs:
      v3_branch_name:
        description: "V3 Branch"
        required: true
        type: choice
        options:
          - release/dev
          - release/uat
          - other
      v3_other_branch_name:
        description: "'Other' V3 branch name"
        required: false
        type: string
      sfblazor_branch_name:
        description: "SfBlazor.Components branch"
        required: true
        type: choice
        options:
          - release/dev
          - release/uat
          - other
      sfblazor_other_branch_name:
        description: "'Other' SfBlazor.Components branch name"
        required: false
        type: string

jobs:
  update-sf-blazor-components:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Resolve branch names
        id: resolve-branch-names
        run: |
          echo "v3_branch_name=${{ inputs.v3_branch_name == 'other' && inputs.v3_other_branch_name || inputs.v3_branch_name }}" >> $GITHUB_OUTPUT
          echo "sfblazor_branch_name=${{ inputs.sfblazor_branch_name == 'other' && inputs.sfblazor_other_branch_name || inputs.sfblazor_branch_name }}" >> $GITHUB_OUTPUT

      - name: Check that branches exist
        run: |
          if ! gh api repos/${{ github.repository }}/branches/${{ steps.resolve-branch-names.outputs.v3_branch_name }} --jq .name 2>/dev/null; then
            echo "\nThe branch ${{ steps.resolve-branch-names.outputs.v3_branch_name }} does not exist in this repository"
            exit 1
          fi
          if ! gh api repos/mark-storefeeder/test-components/branches/${{ steps.resolve-branch-names.outputs.sfblazor_branch_name }} --jq .name 2>/dev/null; then
            echo "\nThe branch ${{ steps.resolve-branch-names.outputs.sfblazor_branch_name }} does not exist in the SfBlazor.Components repository"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Update SfBlazor.Components submodule
#        if: steps.check-branch.outputs.branch_exists == 'true'
#        run: |
#          git submodule update --init --recursive
#          cd modules/test-components
#          git fetch origin release/dev
#          git checkout release/dev
#          cd ../..
#          git add modules/test-components
#          if git diff --staged --quiet; then
#            echo 'No changes to commit'
#          else
#            git config --global user.name 'GitHub Actions'
#            git config --global user.email 'github-actions@github.com'
#            git commit -m 'Update SfBlazor to reference release/dev branch'
#            git push origin HEAD:${{ inputs.head_ref }}
#          fi
