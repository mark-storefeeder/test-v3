name: Resolve Submodule Conflicts

on:
  workflow_dispatch:
    inputs:
      pull_request_number:
        description: 'Number of the pull request to resolve conflicts in'
        required: true
        type: number

jobs:
  resolve-conflicts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get PR details
        id: pr
        run: |
          # Get PR details
          PR_DETAILS=$(gh pr view ${{ inputs.pull_request_number }} --json headRefName,baseRefName)
          HEAD_REF=$(echo "$PR_DETAILS" | jq -r .headRefName)
          BASE_REF=$(echo "$PR_DETAILS" | jq -r .baseRefName)
          echo "head_ref=$HEAD_REF" >> $GITHUB_OUTPUT
          echo "base_ref=$BASE_REF" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Resolve submodule conflicts
        run: |
          # Checkout the PR branch
          git fetch origin ${{ steps.pr.outputs.head_ref }}
          git checkout ${{ steps.pr.outputs.head_ref }}
          
          # Force add the submodule to resolve conflicts
          git add --force modules/test-components
          if ! git diff --staged --quiet; then
            git config --global user.name "GitHub Actions"
            git config --global user.email "github-actions@github.com"
            git commit --message "Resolve submodule conflicts" || true
            git push origin ${{ steps.pr.outputs.head_ref }}
            echo "Resolved submodule conflicts in PR #${{ inputs.pull_request_number }}"
          else
            echo "No submodule conflicts to resolve in PR #${{ inputs.pull_request_number }}"
          fi
